#!/usr/bin/env bash

# This script will install additional software on
# Raspberry Pi's on the local network.


#################
# Initial setup #
#################
export ppid=${PPID} start_msg="installs software on Raspberry Pi's on the local network"
source "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")/environment"



##################################################
# Locate all Raspberry Pi's on the local network #
##################################################
"${this_dir}/locate" "${@}" | tee "locate_output"
if [ ${PIPESTATUS[0]} != 0 ]; then
    trap : 0
    exit 1
fi
ips_pi=""
while read line; do
    if echo "${line}" | grep -i "succesfully" >/dev/null 2>&1; then
        break
    fi
    if [ -z "${ips_pi}" ]; then
        ips_pi=${line}
    else
        ips_pi="$(printf "${line}\n${ips_pi}")"
    fi
done <<< "$(tac "locate_output")"
N_devices="$(echo "${ips_pi}" | wc -l)"
if [ ${N_devices} == 1 ]; then
    echo "
Additional software will be installed on the following Raspberry Pi:"
else
    echo "
Additional software will be installed on
the following ${N_devices} Raspberry Pi's:"
fi
printf "${esc_bold}${ips_pi}${esc_normal}\n"
sleep 5



###########################################################################
# Loop over each located Raspberry Pi and install the additional software #
###########################################################################
all_success="yes"
for ip in ${ips_pi}; do
    execute_on_pi "${ip}" '
    # Install vim
    printf "\n'"${esc_bold}Installing vim${esc_normal}"' ...\n"
    sudo apt-get install -y vim

    # Install sshpass
    printf "\n'"${esc_bold}Installing sshpass${esc_normal}"' ...\n"
    sudo apt-get install -y sshpass

    # Install gfortran
    printf "\n'"${esc_bold}Installing gfortran${esc_normal}"' ...\n"
    sudo apt-get install -y gfortran

    # Install MPICH from source
    printf "\n'"${esc_bold}Installing MPICH${esc_normal}"' ...\n"
    mpi_dir=~/"mpich"
    mpi_version="3.2"
    mpi_url="http://www.mpich.org/static/downloads/${mpi_version}/mpich-${mpi_version}.tar.gz"
    mpi_dir="${mpi_dir//[ ]/\\ }"
    eval mpi_dir="${mpi_dir}"
    mpi_dir="$(readlink -m "${mpi_dir}")"
    mkdir -p ~/"tmp/mpi"
    cd ~/"tmp/mpi"
    wget -t 10 --timeout 15 -c --no-check-certificate "${mpi_url}" 2>/dev/null
    archive="$(ls -p | grep -v /)"
    gzip -d < "${archive}" | tar -ixvf -
    cd *
    ./configure --enable-shared --disable-fortran --prefix="${mpi_dir}"
    make
    make testing 2>&1 | tee "test_log"
    make install
    echo "export PATH=\"\${PATH}:${mpi_dir}/bin\"" >> ~/".bashrc"

    cd ~/
    rm -rf ~/"tmp"

    # Logout
    printf "\t\n"  # The tab signals succcess
    sleep 1
    exit 0
    '
    if [ "${pi_success}" == "no" ]; then
        all_success="no"
    fi
done



########
# Exit #
########
if [ "${all_success}" == "yes" ]; then
    printf "\n${esc_bold}${esc_green}Succesfully installed additional software on
Raspberry Pi's on the local network${esc_normal}\n"
else
    printf "\n${esc_bold}${esc_green}Done installing additional software on
Raspberry Pi's on the local network${esc_normal}\n"
    error "Note that some errors did occur"
    exit 1
fi

# Exit gracefully
trap : 0

